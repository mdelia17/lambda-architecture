@ECHO OFF

docker run --rm --network net-cassandra bitnami/cassandra:3.11.10 cqlsh -e "create keyspace if not exists dns with replication = {'class':'SimpleStrategy', 'replication_factor':1};create table if not exists dns.nameservers (address inet primary key, packets_sent counter, packets_received counter);create table if not exists dns.searched_categories (category text primary key, requests counter);create table if not exists dns.message_types (type text primary key, packets counter);create table if not exists dns.domain_requests_and_responses (request_response text, type text, requests counter, primary key(request_response,type));create table if not exists dns.conversations (conversation_id tuple<text,text,text> primary key, messages list<text>);create table if not exists dns.window_domain_requests_and_responses (start timestamp, end timestamp, type text, request_response text, requests counter, primary key (start, end, type, request_response));create table if not exists dns.window_exchanged_packets (start timestamp, end timestamp, address inet, packets_sent counter, packets_received counter, primary key (start, end, address));CREATE TABLE IF NOT EXISTS dns.window_byte_sums (start timestamp, end timestamp, sum counter, count counter, PRIMARY KEY (start, end));CREATE TABLE IF NOT EXISTS dns.window_message_types (start timestamp, end timestamp, type text, count counter, PRIMARY KEY (start, end, type));create table if not exists dns.errors (address inet primary key, errors counter);truncate dns.nameservers;truncate dns.searched_categories;truncate dns.message_types;truncate dns.domain_requests_and_responses;truncate dns.conversations;truncate dns.window_domain_requests_and_responses;truncate dns.window_exchanged_packets;truncate dns.window_byte_sums;truncate dns.window_message_types;truncate dns.errors;exit;" --username cassandra --password cassandra cassandra-1